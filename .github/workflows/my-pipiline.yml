name: My-GitHub-Actions

#блок глобальных переменных, которые можно применять внутри разных job-ов
env:
  APPLICATION_NAME: "MyFlask"
# ${{ спецкод }} --- это как f-строки, можно добавить активные переменные. в данном случае это код коммита
  PACKAGE_NAME    : "flask-deploy-ver-${{ github.sha }}"

# реагировать на событие
on:
  push:
    branches: [main]

# что делать (блоки контейнеров)
jobs:

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      #
      - name: clone code
        uses: actions/checkout@v2
      #
      - name: docker build
        run: docker build -t korvettik/flask-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      #
      - name: docker tag latest
        run: docker tag korvettik/flask-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID korvettik/flask-app:latest
      #
      - name: docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      # 
      - name: docker push
        run: docker push korvettik/flask-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
      #
      - name: docker push
        run: docker push korvettik/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: postgres
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      #
      - name: clone code
        uses: actions/checkout@v2
      #
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose.yaml | envsubst > deploy/docker-compose.yaml
      #
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "flask-app"
          strip_components: 1
      #
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd flask-app
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d



  # my_deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: print hello message11
  #     run: echo "Hello World"

  #   - name: print hello message12
  #     run: echo "Hello World"

  #   # пример, как в 1 шаг пихнуть несколько действий
  #   - name: Exetute few commands
  #     run: |
  #       echo "Application name ${{ env.APPLICATION_NAME}}"
  #       echo "Package name ${{ env.PACKAGE_NAME}} "


  # my_deploy2:
  #   runs-on: ubuntu-latest
  #   # ожидать завершения определенного контейнера
  #   needs: [ my_deploy ]
  #   steps:
  #   - name: print hello message21
  #     run: echo "Hello World"

  #   - name: print hello message22
  #     run: echo "Hello World"